{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Guita\\\\Documents\\\\SnapShot\\\\src\\\\components\\\\Gallery.js\";\nimport React from \"react\";\nimport NoImages from \"./NoImages\";\nimport Image from \"./Image\";\nimport Lightbox from \"react-awesome-lightbox\";\nimport \"react-awesome-lightbox/build/style.css\";\n\nconst Gallery = props => {\n  const results = props.data;\n  let images;\n  let noImages; // map variables to each item in fetched image array and return image component\n\n  if (results.length > 0) {\n    images = results.map(image => {\n      let farm = image.farm;\n      let server = image.server;\n      let id = image.id;\n      let secret = image.secret;\n      let title = image.title;\n      let url = `https://farm${farm}.staticflickr.com/${server}/${id}_${secret}_m.jpg`;\n      return /*#__PURE__*/React.createElement(Image, {\n        url: url,\n        key: id,\n        alt: title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 14\n        }\n      });\n    });\n  } else {\n    noImages = /*#__PURE__*/React.createElement(NoImages, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }\n    }); // return 'not found' component if no images fetched\n  }\n\n  {\n    /*#__PURE__*/\n    React.createElement(Lightbox, {\n      images: images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 4\n      }\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"all-pics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, images), noImages);\n};\n\nexport default Gallery;","map":{"version":3,"sources":["C:/Users/Guita/Documents/SnapShot/src/components/Gallery.js"],"names":["React","NoImages","Image","Lightbox","Gallery","props","results","data","images","noImages","length","map","image","farm","server","id","secret","title","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAO,wCAAP;;AACA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,QAAMC,OAAO,GAAGD,KAAK,CAACE,IAAtB;AACA,MAAIC,MAAJ;AACA,MAAIC,QAAJ,CAHuB,CAIvB;;AACA,MAAIH,OAAO,CAACI,MAAR,GAAiB,CAArB,EAAwB;AACtBF,IAAAA,MAAM,GAAGF,OAAO,CAACK,GAAR,CAAYC,KAAK,IAAI;AAC5B,UAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,UAAIC,MAAM,GAAGF,KAAK,CAACE,MAAnB;AACA,UAAIC,EAAE,GAAGH,KAAK,CAACG,EAAf;AACA,UAAIC,MAAM,GAAGJ,KAAK,CAACI,MAAnB;AACA,UAAIC,KAAK,GAAGL,KAAK,CAACK,KAAlB;AACA,UAAIC,GAAG,GAAI,eAAcL,IAAK,qBAAoBC,MAAO,IAAGC,EAAG,IAAGC,MAAO,QAAzE;AACA,0BAAO,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEE,GAAZ;AAAiB,QAAA,GAAG,EAAEH,EAAtB;AAA0B,QAAA,GAAG,EAAEE,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KARQ,CAAT;AASD,GAVD,MAUO;AACLR,IAAAA,QAAQ,gBAAG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX,CADK,CACoB;AAC1B;;AACD;AAAC;AAAA,wBAAC,QAAD;AAAU,MAAA,MAAM,EAAED,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AAC7B,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BA,MAA1B,CADF,EAEGC,QAFH,CAFF;AAOD,CA1BD;;AA4BA,eAAeL,OAAf","sourcesContent":["import React from \"react\";\r\nimport NoImages from \"./NoImages\";\r\nimport Image from \"./Image\";\r\nimport Lightbox from \"react-awesome-lightbox\";\r\nimport \"react-awesome-lightbox/build/style.css\"; \r\nconst Gallery = props => {\r\n  const results = props.data;\r\n  let images;\r\n  let noImages;\r\n  // map variables to each item in fetched image array and return image component\r\n  if (results.length > 0) {\r\n    images = results.map(image => {\r\n      let farm = image.farm;\r\n      let server = image.server;\r\n      let id = image.id;\r\n      let secret = image.secret;\r\n      let title = image.title;\r\n      let url = `https://farm${farm}.staticflickr.com/${server}/${id}_${secret}_m.jpg`;\r\n      return <Image url={url} key={id} alt={title} />;\r\n    });\r\n  } else {\r\n    noImages = <NoImages />; // return 'not found' component if no images fetched\r\n  }\r\n  {<Lightbox images={images}/>}\r\n  return (\r\n\r\n    <div>\r\n      <ul className=\"all-pics\">{images}</ul>\r\n      {noImages}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n"]},"metadata":{},"sourceType":"module"}